buildscript {
    ext {
        springBootVersion = '2.0.4.RELEASE'

    }
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath 'com.moowork.gradle:gradle-node-plugin:0.12'
    }
}


plugins {
	id 'java'
	id 'org.springframework.boot' version '2.1.2.RELEASE'
	id "com.moowork.node" version "1.3.1"
	id 'io.spring.dependency-management' version '1.0.7.RELEASE'
	id "io.freefair.lombok" version "3.2.1"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

description = 'spring-vue-sample'

sourceCompatibility = 11
targetCompatibility = 11
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

node {
    version = '6.6.0'
    npmVersion = '3.10.7'
    download = true
}

repositories {
	mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    //implementation 'org.springframework.boot:spring-boot-starter-freemarker'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	compileOnly 'org.projectlombok:lombok'
	compile 'org.springframework.boot:spring-boot-devtools'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude(module: 'commons-logging')
    }
}

bootRun {
    // HTML・Javascript・CSS・その他リソースが更新された時に自動リロードする設定
    // ※src/main/resourcesが対象になる
    // ※webpack.config.js内の設定で、vueファイルが更新されたらwebpackによりsrc/main/resourcesにbundle.jsとしてビルドされるようになっている。
    sourceResources sourceSets.main
    // デバッグ実行時は下記を有効化する。
    //jvmArgs=["-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=5005"]
}

task webpack(type: NodeTask, dependsOn: 'npmInstall') {
    def osName = System.getProperty("os.name").toLowerCase();
    if (osName.contains("windows")) {
        script = project.file('node_modules/webpack/bin/webpack.js')
    } else {
        script = project.file('node_modules/.bin/webpack')
    }
}

processResources.dependsOn 'webpack'

clean.delete << file('node_modules')

